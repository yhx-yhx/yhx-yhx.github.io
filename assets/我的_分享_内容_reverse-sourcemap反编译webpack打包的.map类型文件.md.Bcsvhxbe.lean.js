import{an as i,j as r,k as e,S as l,K as n,aH as p,ae as t,h}from"./chunks/framework.DkOBDE9j.js";const g=JSON.parse('{"title":"reverse-sourcemap 反编译 webpack 打包的 .map 类型文件","description":"","frontmatter":{},"headers":[],"relativePath":"我的/分享/内容/reverse-sourcemap反编译webpack打包的.map类型文件.md","filePath":"我的/分享/内容/reverse-sourcemap反编译webpack打包的.map类型文件.md","lastUpdated":1755659476000}'),o={name:"我的/分享/内容/reverse-sourcemap反编译webpack打包的.map类型文件.md"};function d(c,a,k,u,b,m){const s=t("ArticleMetadata");return h(),r("div",null,[a[0]||(a[0]=e("h1",{id:"reverse-sourcemap-反编译-webpack-打包的-map-类型文件",tabindex:"-1"},[l("reverse-sourcemap 反编译 webpack 打包的 .map 类型文件 "),e("a",{class:"header-anchor",href:"#reverse-sourcemap-反编译-webpack-打包的-map-类型文件","aria-label":'Permalink to "reverse-sourcemap 反编译 webpack 打包的 .map 类型文件"'},"​")],-1)),n(s),a[1]||(a[1]=p(`<h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>reverse-sourcemap 是一个用于反编译 webpack 打包生成的 source map 文件的工具。通过 source map 文件，我们可以还原出原始的源代码结构。</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reverse-sourcemap</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="基本用法" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法" aria-label="Permalink to &quot;基本用法&quot;">​</a></h2><h3 id="_1-反编译单个-map-文件" tabindex="-1">1. 反编译单个 .map 文件 <a class="header-anchor" href="#_1-反编译单个-map-文件" aria-label="Permalink to &quot;1. 反编译单个 .map 文件&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reverse-sourcemap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --output-dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./output</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./path/to/your/file.js.map</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-批量处理多个文件" tabindex="-1">2. 批量处理多个文件 <a class="header-anchor" href="#_2-批量处理多个文件" aria-label="Permalink to &quot;2. 批量处理多个文件&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reverse-sourcemap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --output-dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./output</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.js.map</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="参数说明" tabindex="-1">参数说明 <a class="header-anchor" href="#参数说明" aria-label="Permalink to &quot;参数说明&quot;">​</a></h2><ul><li><code>--output-dir</code> 或 <code>-o</code>: 指定输出目录</li><li><code>--verbose</code> 或 <code>-v</code>: 显示详细信息</li><li><code>--help</code> 或 <code>-h</code>: 显示帮助信息</li></ul><h2 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h2><p>假设你有一个名为 <code>bundle.js.map</code> 的文件：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 将反编译的文件输出到 ./src 目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reverse-sourcemap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./src</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./bundle.js.map</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 显示详细处理信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reverse-sourcemap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./recovered</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./app.js.map</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="输出结果" tabindex="-1">输出结果 <a class="header-anchor" href="#输出结果" aria-label="Permalink to &quot;输出结果&quot;">​</a></h2><p>工具会在指定的输出目录中重建原始的文件结构，包括：</p><ul><li>原始的 JavaScript 文件</li><li>保持原有的目录结构</li><li>恢复文件的相对路径关系</li></ul><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h2><ol><li>确保 .map 文件完整且未被压缩</li><li>某些经过混淆的代码可能无法完全恢复</li><li>输出的代码结构取决于原始构建配置</li><li>建议在安全的环境中处理未知来源的 map 文件</li></ol><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><p><strong>Q: 为什么有些文件无法恢复？</strong> A: 可能是因为 source map 文件不完整或者原始代码经过了特殊处理。</p><p><strong>Q: 输出的代码能直接运行吗？</strong> A: 恢复的代码通常需要安装相应的依赖包才能正常运行。</p><h2 id="相关工具" tabindex="-1">相关工具 <a class="header-anchor" href="#相关工具" aria-label="Permalink to &quot;相关工具&quot;">​</a></h2><ul><li><code>source-map-explorer</code>: 分析 source map 文件</li><li><code>webpack-bundle-analyzer</code>: 分析 webpack 打包结果</li></ul>`,24))])}const v=i(o,[["render",d]]);export{g as __pageData,v as default};

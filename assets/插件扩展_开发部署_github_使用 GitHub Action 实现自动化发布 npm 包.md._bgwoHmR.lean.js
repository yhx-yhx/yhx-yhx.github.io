import{an as s,j as a,aH as e,h as p}from"./chunks/framework.DkOBDE9j.js";const l="/assets/image-20241119151711151.HBycm-nA.png",i="/assets/image-20241119151727421.BgQAVUnz.png",c="/assets/image-20241119151752225.DKg7psW5.png",r="/assets/image-20241119151925884.Dqs4rBRY.png",o="/assets/image-20241119151953653.wN8MNU6-.png",H=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"插件扩展/开发部署/github/使用 GitHub Action 实现自动化发布 npm 包.md","filePath":"插件扩展/开发部署/github/使用 GitHub Action 实现自动化发布 npm 包.md","lastUpdated":1732344648000}'),t={name:"插件扩展/开发部署/github/使用 GitHub Action 实现自动化发布 npm 包.md"};function b(m,n,d,u,h,g){return p(),a("div",null,n[0]||(n[0]=[e(`<h2 id="使用-github-action-实现自动化发布-npm-包" tabindex="-1">使用 GitHub Action 实现自动化发布 npm 包 <a class="header-anchor" href="#使用-github-action-实现自动化发布-npm-包" aria-label="Permalink to &quot;使用 GitHub Action 实现自动化发布 npm 包&quot;">​</a></h2><p>在开发 <code>JavaScript</code> 应用程序或库时，发布到 <code>npm</code> 上是一种常见的方式来分享和分发你的代码。手动发布 <code>npm</code> 包可能会变得繁琐和容易出错，因此自动化这个过程是非常有帮助的。</p><p><code>GitHub Actions</code> 是一个功能强大的工具，它可以帮助你实现自动化发布 <code>npm</code> 包的流程。在本文中，我们将学习如何使用 <code>GitHub Action</code> 实现自动化发布 <code>npm</code> 包的步骤。</p><h3 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h3><ol><li>确保你有一个 <a href="https://www.npmjs.com/" target="_blank" rel="noreferrer"><code>npm</code> 账号</a>，并且已经登录到 <code>npm</code>。</li><li>创建一个 <code>GitHub</code> 仓库用于存储你的 <code>npm</code> 包的代码。</li></ol><h3 id="设置-github-action" tabindex="-1">设置 GitHub Action <a class="header-anchor" href="#设置-github-action" aria-label="Permalink to &quot;设置 GitHub Action&quot;">​</a></h3><ol><li>在你的 GitHub 仓库中，创建一个名为 <code>.github/workflows/npm-publish.yml</code> 的文件，用于存储 GitHub Action 的配置。</li><li>在 <code>npm-publish.yml</code> 中添加以下内容：</li></ol><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>name: Publish to npm</span></span>
<span class="line"><span></span></span>
<span class="line"><span>on:</span></span>
<span class="line"><span>  push:</span></span>
<span class="line"><span>    branches:</span></span>
<span class="line"><span>      # 触发ci/cd的代码分支</span></span>
<span class="line"><span>      - master</span></span>
<span class="line"><span></span></span>
<span class="line"><span>jobs:</span></span>
<span class="line"><span>  build:</span></span>
<span class="line"><span>    # 指定操作系统</span></span>
<span class="line"><span>    runs-on: ubuntu-latest</span></span>
<span class="line"><span>    steps:</span></span>
<span class="line"><span>      # 将代码拉到虚拟机</span></span>
<span class="line"><span>      - name: 获取源码 🛎️</span></span>
<span class="line"><span>        uses: actions/checkout@v2</span></span>
<span class="line"><span>      # 指定node版本</span></span>
<span class="line"><span>      - name: Node环境版本 🗜️</span></span>
<span class="line"><span>        uses: actions/setup-node@v3</span></span>
<span class="line"><span>        with:</span></span>
<span class="line"><span>          node-version: 18</span></span>
<span class="line"><span>          registry-url: &#39;https://registry.npmjs.org&#39;</span></span>
<span class="line"><span>      # 依赖缓存策略</span></span>
<span class="line"><span>      - name: Npm缓存 📁</span></span>
<span class="line"><span>        id: cache-dependencies</span></span>
<span class="line"><span>        uses: actions/cache@v3</span></span>
<span class="line"><span>        with:</span></span>
<span class="line"><span>          path: |</span></span>
<span class="line"><span>            **/node_modules</span></span>
<span class="line"><span>          key: \${{runner.OS}}-\${{hashFiles(&#39;**/package-lock.json&#39;)}}</span></span>
<span class="line"><span>      # 依赖下载</span></span>
<span class="line"><span>      - name: 安装依赖 📦</span></span>
<span class="line"><span>        if: steps.cache-dependencies.outputs.cache-hit != &#39;true&#39;</span></span>
<span class="line"><span>        run: npm install</span></span>
<span class="line"><span>      # 打包</span></span>
<span class="line"><span>      - name: 打包 🏗️</span></span>
<span class="line"><span>        run: npm run build</span></span>
<span class="line"><span>      # 测试</span></span>
<span class="line"><span>      - name: 测试 💣</span></span>
<span class="line"><span>        run: npm run test</span></span>
<span class="line"><span>      # 发布</span></span>
<span class="line"><span>      - name: 发布 🚀</span></span>
<span class="line"><span>        run: npm publish</span></span>
<span class="line"><span>        env:</span></span>
<span class="line"><span>          NPM_TOKEN: \${{ secrets.NPM_TOKEN }}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div><h3 id="申请-npm-访问令牌" tabindex="-1">申请 npm 访问令牌 <a class="header-anchor" href="#申请-npm-访问令牌" aria-label="Permalink to &quot;申请 npm 访问令牌&quot;">​</a></h3><ol><li>登录 <code>npm</code> 官网，登录成功后，点开右上角头像，并点击 <code>Access Tokens</code> 选项。</li></ol><p><img src="`+l+'" alt="image-20241119151711151"></p><ol><li>点开 <code>Generate New Token</code> 下拉框，点击 <code>Classic Token</code> 选项。</li></ol><p><img src="'+i+'" alt="image-20241119151727421"></p><ol><li>创建一个名称为 <code>GITHUB_PUBLISH_TOKEN</code> 的令牌，并选择 <code>publish 发布</code>权限。</li></ol><p><img src="'+c+'" alt="image-20241119151752225"></p><ol><li>复制新生成的访问令牌。</li></ol><h3 id="配置-npm-访问令牌" tabindex="-1">配置 npm 访问令牌 <a class="header-anchor" href="#配置-npm-访问令牌" aria-label="Permalink to &quot;配置 npm 访问令牌&quot;">​</a></h3><ol><li>进入项目仓库，点击仓库tab选项卡的 <code>Settings</code> ，点开 <code>Secrets and variables</code> 选项卡，点击 <code>Actions</code> 选项，点击对应页面的 <code>&quot;New repository secret&quot;</code> 按钮。</li></ol><p><img src="'+r+'" alt="image-20241119151925884"></p><ol><li>新建名称为 <code>NPM_TOKEN</code>的 <code>secret</code>, 并将刚刚申请到的<code>GITHUB_PUBLISH_TOKEN</code>填入 <code>secret</code> 字段。</li></ol><p><img src="'+o+'" alt="image-20241119151953653"></p><h3 id="发布-npm-包" tabindex="-1">发布 npm 包 <a class="header-anchor" href="#发布-npm-包" aria-label="Permalink to &quot;发布 npm 包&quot;">​</a></h3><ol><li>在你的代码中做任何更改。</li><li>提交这些更改并创建一个新的 <code>Release</code> 。</li><li><code>GitHub Action</code> 将自动触发并自动构建、测试和发布你的 <code>npm</code> 包。</li></ol><p>通过以上步骤，你已经成功地设置了 <code>GitHub Action</code> 来实现自动化发布 <code>npm</code> 包的流程。现在，每当你创建一个新的 <code>Release</code>，你的代码将自动发布到 <code>npm</code> 上，让你的开发流程更加高效和方便。</p>',24)]))}const k=s(t,[["render",b]]);export{H as __pageData,k as default};

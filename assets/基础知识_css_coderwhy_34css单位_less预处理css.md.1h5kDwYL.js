import{an as e,j as s,aH as l,h as r}from"./chunks/framework.DkOBDE9j.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"基础知识/css/coderwhy/34css单位/less预处理css.md","filePath":"基础知识/css/coderwhy/34css单位/less预处理css.md","lastUpdated":1713792803000}'),t={name:"基础知识/css/coderwhy/34css单位/less预处理css.md"};function o(i,a,h,n,c,d){return r(),s("div",null,a[0]||(a[0]=[l('<h3 id="less" tabindex="-1">less <a class="header-anchor" href="#less" aria-label="Permalink to &quot;less&quot;">​</a></h3><p><a href="https://lesscss.cn/" target="_blank" rel="noreferrer">https://lesscss.cn/</a></p><ul><li>less 选择器嵌套</li></ul><h4 id="定义变量" tabindex="-1">定义变量 <a class="header-anchor" href="#定义变量" aria-label="Permalink to &quot;定义变量&quot;">​</a></h4><ul><li>@变量名:变量值</li></ul><h4 id="运算符" tabindex="-1">运算符 <a class="header-anchor" href="#运算符" aria-label="Permalink to &quot;运算符&quot;">​</a></h4><h5 id="" tabindex="-1">&amp; <a class="header-anchor" href="#" aria-label="Permalink to &quot;&amp;&quot;">​</a></h5><h4 id="运算" tabindex="-1">运算 <a class="header-anchor" href="#运算" aria-label="Permalink to &quot;运算&quot;">​</a></h4><ul><li>直接可以进行 四则运算</li></ul><h4 id="混入" tabindex="-1">混入 <a class="header-anchor" href="#混入" aria-label="Permalink to &quot;混入&quot;">​</a></h4><ul><li>mixins 可以携带参数</li></ul><p>.box(@w:200px,@h:200px){ height:@h; width:@w; background-color:red; } .box2{ //混入 .box(); // 混入与映射结合使用 background-color:.box()[background-color] }</p><h4 id="继承-extends" tabindex="-1">继承（extends） <a class="header-anchor" href="#继承-extends" aria-label="Permalink to &quot;继承（extends）&quot;">​</a></h4><ul><li>继承 .extends(.class)</li></ul><h4 id="杂项函数" tabindex="-1">杂项函数 <a class="header-anchor" href="#杂项函数" aria-label="Permalink to &quot;杂项函数&quot;">​</a></h4><ul><li>convert 从一种单位转为另一种单位</li></ul><h4 id="引入-import" tabindex="-1">引入 @import <a class="header-anchor" href="#引入-import" aria-label="Permalink to &quot;引入 @import&quot;">​</a></h4>',17)]))}const p=e(t,[["render",o]]);export{b as __pageData,p as default};

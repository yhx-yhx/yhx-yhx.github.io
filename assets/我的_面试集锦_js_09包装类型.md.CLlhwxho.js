import{ak as e,h as n,j as i,R as t,J as l,aE as p,ab as h,f as r}from"./chunks/framework.bB9sJqKE.js";const y=JSON.parse('{"title":"包装类型","description":"","frontmatter":{},"headers":[],"relativePath":"我的/面试集锦/js/09包装类型.md","filePath":"我的/面试集锦/js/09包装类型.md","lastUpdated":1733798646000}'),k={name:"我的/面试集锦/js/09包装类型.md"};function d(o,s,c,E,g,u){const a=h("ArticleMetadata");return r(),n("div",null,[s[0]||(s[0]=i("h1",{id:"包装类型",tabindex:"-1"},[t("包装类型 "),i("a",{class:"header-anchor",href:"#包装类型","aria-label":'Permalink to "包装类型"'},"​")],-1)),l(a),s[1]||(s[1]=p(`<h2 id="你是否了解过包装类型" tabindex="-1"><strong>你是否了解过包装类型？</strong> <a class="header-anchor" href="#你是否了解过包装类型" aria-label="Permalink to &quot;**你是否了解过包装类型？**&quot;">​</a></h2><p>包装对象，基础类型被包装成了对应包装类型</p><p>比如 let str = &#39;hello&#39;;会创建临时包装类型 new String(&#39;hello&#39;)</p><p>然后可以作为对象去使用原型上的方法</p><p>操作完后，临时包装类型会被销毁</p><p>基础类型 <code>number</code> <code>string</code> <code>boolean</code> <code>symbol</code> <code>bigint</code> 都有对用的包装类型</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 产生临时包装类型</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在执行代码时，js引擎自动的创建对应的临时包装类型，执行完后将对应的临时包装类型销毁</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">str.test </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(str.test); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// undefined 临时包装类型被销毁</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">str.test </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(str.test); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// test</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,8))])}const m=e(k,[["render",d]]);export{y as __pageData,m as default};

import{an as a,j as n,aH as e,h as l}from"./chunks/framework.DkOBDE9j.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"gis/unreal/起步教程.md","filePath":"gis/unreal/起步教程.md","lastUpdated":1733415111000}'),i={name:"gis/unreal/起步教程.md"};function p(r,s,t,c,o,b){return l(),n("div",null,s[0]||(s[0]=[e(`<h3 id="_1-开发环境搭建" tabindex="-1">1. 开发环境搭建 <a class="header-anchor" href="#_1-开发环境搭建" aria-label="Permalink to &quot;1. 开发环境搭建&quot;">​</a></h3><ol><li><strong>安装必要软件</strong></li></ol><div class="language-plaintext vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1. 虚幻引擎 5.x (建议从Epic Games Launcher安装)</span></span>
<span class="line"><span>2. Visual Studio 2022 (安装时选择以下组件):</span></span>
<span class="line"><span>   - 游戏开发C++</span></span>
<span class="line"><span>   - Windows 10 SDK</span></span>
<span class="line"><span>3. Node.js (LTS版本)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="2"><li><strong>创建 UE 项目</strong></li></ol><div class="language-plaintext vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1. 创建新项目:</span></span>
<span class="line"><span>   - 选择 Games → Blank</span></span>
<span class="line"><span>   - 选择 C++ (不要选Blueprint)</span></span>
<span class="line"><span>   - 启用 Starter Content</span></span>
<span class="line"><span>   - 选择 Desktop/Console</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_2-配置-pixel-streaming" tabindex="-1">2. 配置 Pixel Streaming <a class="header-anchor" href="#_2-配置-pixel-streaming" aria-label="Permalink to &quot;2. 配置 Pixel Streaming&quot;">​</a></h3><ol><li><strong>项目设置修改</strong></li></ol><div class="language-plaintext:UE编辑器操作 vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">plaintext:UE编辑器操作</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1. 编辑 → 项目设置</span></span>
<span class="line"><span>2. 找到 Platforms → Pixel Streaming</span></span>
<span class="line"><span>3. 确保以下选项启用:</span></span>
<span class="line"><span>   - Enable Pixel Streaming</span></span>
<span class="line"><span>   - Enable Low Latency</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="2"><li><strong>基础测试场景设置</strong></li></ol><div class="language-cpp:GameMode.h vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp:GameMode.h</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// 创建基础GameMode</span></span>
<span class="line"><span>class ACustomGameMode : public AGameModeBase</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>    GENERATED_BODY()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>public:</span></span>
<span class="line"><span>    // 添加场景A的引用</span></span>
<span class="line"><span>    UPROPERTY(EditAnywhere, Category = &quot;Scenes&quot;)</span></span>
<span class="line"><span>    AActor* SceneA;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    // 添加场景B的引用</span></span>
<span class="line"><span>    UPROPERTY(EditAnywhere, Category = &quot;Scenes&quot;)</span></span>
<span class="line"><span>    AActor* SceneB;</span></span>
<span class="line"><span>};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="_3-启动测试" tabindex="-1">3. 启动测试 <a class="header-anchor" href="#_3-启动测试" aria-label="Permalink to &quot;3. 启动测试&quot;">​</a></h3><ol><li><strong>启动 Pixel Streaming 服务器</strong></li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入UE安装目录的Pixel Streaming服务器文件夹</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [UE安装路径]/Engine/Source/Programs/PixelStreaming/WebServers/SignallingWebServer</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 启动服务器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cirrus.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ol start="2"><li><strong>启动 UE 项目</strong></li></ol><div class="language-plaintext vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1. 在UE编辑器中点击 Launch 按钮</span></span>
<span class="line"><span>2. 选择 Standalone Game</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_4-下一步行动计划" tabindex="-1">4. 下一步行动计划 <a class="header-anchor" href="#_4-下一步行动计划" aria-label="Permalink to &quot;4. 下一步行动计划&quot;">​</a></h3><ol><li><strong>场景制作</strong></li></ol><ul><li>创建两个测试场景（房子 A 和房子 B）</li><li>设置摄像机位置</li><li>添加基本光照</li></ul><ol start="2"><li><strong>用户管理系统</strong></li></ol><ul><li>实现基本的用户识别</li><li>场景切换逻辑</li></ul><ol start="3"><li><strong>网络功能</strong></li></ol><ul><li>配置 WebSocket 连接</li><li>实现用户会话管理</li></ul><h3 id="需要注意的问题" tabindex="-1">需要注意的问题： <a class="header-anchor" href="#需要注意的问题" aria-label="Permalink to &quot;需要注意的问题：&quot;">​</a></h3><ol><li><strong>防火墙设置</strong></li></ol><div class="language-plaintext vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>需要开放以下端口：</span></span>
<span class="line"><span>- 8888 (信令服务器)</span></span>
<span class="line"><span>- 80/443 (Web服务器)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="2"><li><strong>常见问题解决</strong></li></ol><ul><li>如果视频流无法启动，检查 NVIDIA 驱动是否最新</li><li>确保防火墙没有阻止相关端口</li><li>检查网络连接是否稳定</li></ul><h3 id="您想先从哪部分开始-我可以提供" tabindex="-1">您想先从哪部分开始？我可以提供： <a class="header-anchor" href="#您想先从哪部分开始-我可以提供" aria-label="Permalink to &quot;您想先从哪部分开始？我可以提供：&quot;">​</a></h3><ol><li>详细的场景制作指导</li><li>用户管理系统的代码示例</li><li>网络配置的具体步骤</li><li>任何其他您感兴趣的部分</li></ol><p>请告诉我您想先深入了解哪个部分，我会提供更详细的指导。</p>`,30)]))}const h=a(i,[["render",p]]);export{u as __pageData,h as default};

import{ak as i,h as t,j as a,R as n,J as l,aE as r,ab as p,f as d}from"./chunks/framework.bB9sJqKE.js";const E=JSON.parse('{"title":"esModule","description":"","frontmatter":{},"headers":[],"relativePath":"基础知识/nodejs/模块化/esm.md","filePath":"基础知识/nodejs/模块化/esm.md","lastUpdated":1714289834000}'),o={name:"基础知识/nodejs/模块化/esm.md"};function h(k,s,c,m,u,g){const e=p("ArticleMetadata");return d(),t("div",null,[s[0]||(s[0]=a("h1",{id:"esmodule",tabindex:"-1"},[n("esModule "),a("a",{class:"header-anchor",href:"#esmodule","aria-label":'Permalink to "esModule"'},"​")],-1)),l(e),s[1]||(s[1]=r('<h2 id="引入" tabindex="-1">引入 <a class="header-anchor" href="#引入" aria-label="Permalink to &quot;引入&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> all_1, {all </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> all_} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;all.js&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="esm并不支持导入-json" tabindex="-1">esm并不支持导入 json <a class="header-anchor" href="#esm并不支持导入-json" aria-label="Permalink to &quot;esm并不支持导入 json&quot;">​</a></h2><p>高版本可以使用 实验性特性</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> json </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./data.json&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> assert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {type:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;json&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>',5))])}const v=i(o,[["render",h]]);export{E as __pageData,v as default};

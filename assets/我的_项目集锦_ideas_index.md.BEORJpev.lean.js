import{an as l,j as a,aH as p,h as e}from"./chunks/framework.DkOBDE9j.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"我的/项目集锦/ideas/index.md","filePath":"我的/项目集锦/ideas/index.md","lastUpdated":1735021739000}'),o={name:"我的/项目集锦/ideas/index.md"};function t(r,i,n,s,d,u){return e(),a("div",null,i[0]||(i[0]=[p('<h2 id="demo-整合架构" tabindex="-1">demo 整合架构 <a class="header-anchor" href="#demo-整合架构" aria-label="Permalink to &quot;demo 整合架构&quot;">​</a></h2><ul><li><p>monaco-editor</p></li><li><p>实时编辑 预览</p></li><li><p>同架构 同代码复制粘贴即可使用</p></li><li><p>同架构设计 稳定高效</p></li></ul><h2 id="中后台系统" tabindex="-1">中后台系统 <a class="header-anchor" href="#中后台系统" aria-label="Permalink to &quot;中后台系统&quot;">​</a></h2><h3 id="前台" tabindex="-1">前台 <a class="header-anchor" href="#前台" aria-label="Permalink to &quot;前台&quot;">​</a></h3><p>1.主要功能</p><p>1.1 约定式路由 -（vue-router 考虑集成</p><p>1.2 权限管理</p><ul><li><p>菜单权限</p></li><li><p>按钮权限</p></li><li><p>页面权限</p></li></ul><blockquote><p>以上三者在不同程度上有交叉</p></blockquote><p>1.3 字典处理</p><ul><li><p>字典数据处理（高效）注意版本问题 打包生成版本文件</p></li><li><p>具体方案 请求结果 返回字典 ss 中 同样数据减少 请求 数量，注意 生产时 更新问题及时销毁</p><p>1.4 配置文件</p></li><li><p>配置文件处理（高效）</p></li><li><p>通过 js 配置路径 指定页面加载内容 避免重复加载配置文件 配置文件 可以通过文件名称进行访问 在缓存中访问</p><p>1.5 样式</p></li><li><p>样式响应式系统 采用 tailwind 来解决</p></li><li><p>主题配置 （用户选择颜色生成主题）</p></li><li><p>UI 组件库 （element-plus 后期 增加 ant-design 版本）</p><p>1.6 打包</p></li><li><p>打包方案 代码良好的不超过 1000 行</p></li><li><p>合理分包 三方库（版本较为固定） 自己的代码（版本较为固定）</p></li><li><p>打包生成版本文件 版本文件更新 通知用户 更新</p></li><li><p>……</p><p>1.7 规范开发方案</p></li><li><p>eslint</p></li><li><p>prettier</p></li><li><p>commitlint</p></li><li><p>husky</p></li><li><p>lint</p></li><li><p>staged</p></li><li><p>commitizen</p><p>1.8 技术选型</p><p>vue(all) + ts + vite + tailwind + element-plus</p><p>2.UI</p></li><li><p>不做原型设计考虑</p><p>3.业务功能</p><p>3.1 表单二次封装</p></li><li><p>验证问题 级联验证问题</p><p>3.2 级联数据 权限问题 级联限制</p><p>3.3 表格二次封装 支持导出 格式 word xlsx</p><p>3.4 文件上传</p></li><li><p>文件上传 进度 tip</p><p>3.5 轮播图</p><p>3.6 音视频</p><p>4.feature</p></li><li><p>自定义配置管理</p></li><li><p>主题配置 （用户选择颜色生成主题）</p></li><li><p>国际化（vue-i18n） 仅支持中英文</p></li></ul><h2 id="后台管理系统" tabindex="-1">后台管理系统 <a class="header-anchor" href="#后台管理系统" aria-label="Permalink to &quot;后台管理系统&quot;">​</a></h2><h3 id="后台" tabindex="-1">后台 <a class="header-anchor" href="#后台" aria-label="Permalink to &quot;后台&quot;">​</a></h3><p>使用 nestjs-admin 框架 （ruoyi）</p><p>1.feature</p><ul><li>考虑 接入数据库的成本 修改方案的成本</li><li>考虑 微服务成本</li><li>考虑 登录接入成本</li></ul><h2 id="qahub" tabindex="-1">qahub <a class="header-anchor" href="#qahub" aria-label="Permalink to &quot;qahub&quot;">​</a></h2><blockquote><p>简单社交站点 渐进式的增加需求</p></blockquote><h3 id="主要功能模块与接口设计" tabindex="-1">主要功能模块与接口设计 <a class="header-anchor" href="#主要功能模块与接口设计" aria-label="Permalink to &quot;主要功能模块与接口设计&quot;">​</a></h3><p>1.用户模块</p><blockquote><p>难点 解决状态存储问题 难点 解决接口权限校验的中间件 <strong>接口设计</strong> 1.1 注册用户 1.2 用户登录 1.3 修改用户信息 1.4 退出登录 1.5 获取用户信息（包括 用户脱敏信息等 ） 1.6 修改用户密码 1.7 搜索相关用户 1.8 获取点赞列表 1.9 获取收藏列表 1.11 获取粉丝列表</p></blockquote><p>2.帖子模块</p><blockquote><p>绑定所属用户关系 <strong>接口设计</strong> 2.1 发布帖子 2.2 删除帖子 2.3 修改帖子 2.4 获取帖子 2.5 获取帖子列表 携带基本信息 包含用户 点赞 评论 收藏 2.6 获取帖子详情 没必要 实现 2.7 点赞帖子 2.8 取消点赞帖子 2.9 收藏帖子 2.10 取消收藏帖子 2.11 搜索相关帖子</p></blockquote><p>3.评论模块</p><blockquote><p>难点 数据库多层关联实现 pid id 查找 id === pid ，返回给 children 递归实现 发起人 文章 回复人 三者信息关联 存在 多层关联 如被删除父级评论 其子该如何处理 回复的页面设计 父级评论 子集评论 嵌套 （设计思路，所有的回复信息 都是围绕着父级和帖子之间的关系 展开讨论的 ） 评论存储 需要发起人 被评论文章 之间的关系 <strong>接口设计</strong> 3.1 发布评论 3.2 删除评论 3.3 修改评论 3.4 获取评论 3.5 获取评论列表 携带基本信息 包含用户 点赞 评论 收藏 3.6 评论点赞 3.8 取消点赞评论</p></blockquote><p>4.点赞模块</p><blockquote><p>这里提到的 点赞属于 帖子点赞 点赞存储 需要发起人 被点赞文章 之间的关系 <strong>接口设计</strong> 4.1 点赞帖子 4.2 取消点赞帖子 4.3 ……</p></blockquote><p>5.关注模块</p><blockquote><p>关注动作触发，更新用户列表；同时，更新粉丝列表。 <strong>接口设计</strong> 5.1 关注用户 5.2 取消关注用户 5.3 ……</p></blockquote><p>6.收藏模块</p><blockquote><p>收藏 指的文章被收藏，涉及到文章与用户之间的关系 <strong>接口设计</strong> 6.1 收藏文章 6.2 取消收藏文章 6.3 ……</p></blockquote><p>7.通知模块</p><blockquote><p>难点 消息的实时传递 websocket 还是其他方式 推测思路 查询到所有 未读的通知返回数据 当用户点击了，调用已读接口 更新数据状态即可 如何实现 没有思路（代码层面的 webSocket） <strong>接口设计</strong> 7.1 获取通知列表 7.2 获取通知详情 7.3 删除通知 7.4 标记通知已读 7.5 获取未读通知数量 7.6 获取未读通知列表 7.7 获取未读通知详情</p></blockquote><p>8.即时通信模块</p><blockquote><p>即时通信的方式效率 用户 发起聊天 from user 、 to user 时间 给予关联值 作为聊天记录查询条件 <strong>接口设计</strong> 8.1 获取聊天记录 8.2 发送聊天消息 8.3 ……</p></blockquote><h3 id="技术选型" tabindex="-1">技术选型 <a class="header-anchor" href="#技术选型" aria-label="Permalink to &quot;技术选型&quot;">​</a></h3><p>1.vue + vue-router + vite + ?fabricjs + tailwind</p><p>2.node + express + mongodb + mongoose + redis + websocket</p><p>9.……</p><h3 id="支持多端" tabindex="-1">支持多端 <a class="header-anchor" href="#支持多端" aria-label="Permalink to &quot;支持多端&quot;">​</a></h3><p>1.web 端</p><p>2.移动端 安卓端 暂定套壳 uniapp webview</p><p>3.小程序 待选</p><p>4.……</p><h2 id="工业互联网组态" tabindex="-1">工业互联网组态 <a class="header-anchor" href="#工业互联网组态" aria-label="Permalink to &quot;工业互联网组态&quot;">​</a></h2><h3 id="_2d" tabindex="-1">2D <a class="header-anchor" href="#_2d" aria-label="Permalink to &quot;2D&quot;">​</a></h3><p>1.设计组件的拖拉拽</p><p>2.修改组件的基本信息、数据源</p><p>3.考虑自定义组件 导入方式</p><p>4.动态获取更新数据</p><p>5.拖拉拽 fabricjs? graphicsjs？ 腾讯？ paperjs ?</p><p>6.丰富的资源图库 尽量（适配 厂商常见的 icon 格式 和 动图格式等）； 采用 svg 适配 基础的图片格式</p><p>7.动画效果的实现 水流等，流动效果 js 实现 还是 css 实现做选型</p><h3 id="技术选型-1" tabindex="-1">技术选型 <a class="header-anchor" href="#技术选型-1" aria-label="Permalink to &quot;技术选型&quot;">​</a></h3><p>vue + vue-router + vite + ?fabricjs + tailwind</p><h3 id="_2-5-d" tabindex="-1">2.5 D <a class="header-anchor" href="#_2-5-d" aria-label="Permalink to &quot;2.5 D&quot;">​</a></h3><p>……</p><h2 id="movies-list-多端-app" tabindex="-1">movies list 多端 APP <a class="header-anchor" href="#movies-list-多端-app" aria-label="Permalink to &quot;movies list 多端 APP&quot;">​</a></h2><h3 id="主要做移动端-安卓端-uniapp" tabindex="-1">主要做移动端 安卓端 uniapp <a class="header-anchor" href="#主要做移动端-安卓端-uniapp" aria-label="Permalink to &quot;主要做移动端 安卓端 uniapp&quot;">​</a></h3><h2 id="todolist" tabindex="-1">todolist <a class="header-anchor" href="#todolist" aria-label="Permalink to &quot;todolist&quot;">​</a></h2><ul><li>功能 注册登录 crud list 自动保存内容 存储内容</li><li>electron pc uniapp 多端适配</li><li>pc 快捷键开启 常驻后台 开机自启 询问 自定义安装路径 置顶 手动点击实现 默认非置顶状态</li><li>导出 格式 待定</li><li>尝试调用接口 免费润色导出 今日日报</li><li>支持批量导出 todo 内容 可选日期区间</li><li>未完成内容时间挂日期 放置在页面上方</li><li>可自定义级别 提示逾期 最后的完成期限</li><li>若逾期已完成自动 设为不展示</li><li>可设置任务置顶功能</li><li>可修改 查询内容 内容可按照等级 查询日期范围 关键词查询</li><li>逾期 微信公众号提醒等 邮箱提醒 自动配置等</li></ul>',61)]))}const b=l(o,[["render",t]]);export{c as __pageData,b as default};

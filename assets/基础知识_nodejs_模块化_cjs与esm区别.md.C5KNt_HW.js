import{an as e,j as l,aH as i,h as s}from"./chunks/framework.DkOBDE9j.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"基础知识/nodejs/模块化/cjs与esm区别.md","filePath":"基础知识/nodejs/模块化/cjs与esm区别.md","lastUpdated":1714289834000}'),t={name:"基础知识/nodejs/模块化/cjs与esm区别.md"};function r(h,a,o,n,c,d){return s(),l("div",null,a[0]||(a[0]=[i('<h2 id="cjs-与-esm-区别" tabindex="-1">cjs 与 esm 区别 <a class="header-anchor" href="#cjs-与-esm-区别" aria-label="Permalink to &quot;cjs 与 esm 区别&quot;">​</a></h2><h3 id="_1-模块引入方式" tabindex="-1">1. 模块引入方式 <a class="header-anchor" href="#_1-模块引入方式" aria-label="Permalink to &quot;1. 模块引入方式&quot;">​</a></h3><ul><li>cjs 引入方式：require</li><li>esm 引入方式：import</li></ul><h3 id="_2-模块导出方式" tabindex="-1">2. 模块导出方式 <a class="header-anchor" href="#_2-模块导出方式" aria-label="Permalink to &quot;2. 模块导出方式&quot;">​</a></h3><ul><li>cjs 导出方式：module.exports</li><li>esm 导出方式：export</li></ul><h3 id="_3-模块加载方式" tabindex="-1">3. 模块加载方式 <a class="header-anchor" href="#_3-模块加载方式" aria-label="Permalink to &quot;3. 模块加载方式&quot;">​</a></h3><ul><li>cjs 加载方式：同步加载</li><li>esm 加载方式：异步加载</li></ul><h3 id="_4-模块缓存" tabindex="-1">4. 模块缓存 <a class="header-anchor" href="#_4-模块缓存" aria-label="Permalink to &quot;4. 模块缓存&quot;">​</a></h3><ul><li>cjs 模块缓存：多次引入只加载一次</li><li>esm 模块缓存：多次引入每次都会加载</li></ul><h3 id="_5-模块循环引用" tabindex="-1">5. 模块循环引用 <a class="header-anchor" href="#_5-模块循环引用" aria-label="Permalink to &quot;5. 模块循环引用&quot;">​</a></h3><ul><li>cjs 模块循环引用：会报错</li><li>esm 模块循环引用：不会报错，会递归加载</li></ul><h3 id="_6-模块加载顺序" tabindex="-1">6. 模块加载顺序 <a class="header-anchor" href="#_6-模块加载顺序" aria-label="Permalink to &quot;6. 模块加载顺序&quot;">​</a></h3><ul><li>cjs 模块加载顺序：先加载后执行</li><li>esm 模块加载顺序：先加载先执行</li></ul><h3 id="_7-tree-shaking" tabindex="-1">7.tree shaking <a class="header-anchor" href="#_7-tree-shaking" aria-label="Permalink to &quot;7.tree shaking&quot;">​</a></h3><ul><li>cjs 没有tree shaing</li><li>esm 有tree shaing</li></ul><h3 id="_8-模块热更新" tabindex="-1">8. 模块热更新 <a class="header-anchor" href="#_8-模块热更新" aria-label="Permalink to &quot;8. 模块热更新&quot;">​</a></h3><ul><li>cjs 没有模块热更新</li><li>esm 有模块热更新</li></ul><h3 id="_9-顶层this" tabindex="-1">9.顶层this <a class="header-anchor" href="#_9-顶层this" aria-label="Permalink to &quot;9.顶层this&quot;">​</a></h3><ul><li>cjs 顶层this指向模块本身</li><li>esm 顶层this指向undefined</li></ul>',19)]))}const _=e(t,[["render",r]]);export{m as __pageData,_ as default};
